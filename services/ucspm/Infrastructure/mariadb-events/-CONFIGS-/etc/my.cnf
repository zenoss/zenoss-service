#---------------------------------------------------------------------------
# Zenoss DataStore Configuration
#---------------------------------------------------------------------------
[mysqld]
innodb_file_per_table
skip_external_locking
skip-host-cache
skip-name-resolve
log_error=/var/log/mysqld.log

#
# Per the current Zenoss Resource Manager Install Guide,
# please size innodb_buffer_pool_size according to the following
# guidelines:
#
# Deployment Size       Value of innodb_buffer_pool_size
# --------------------  --------------------------------
#    1 to  250 devices   512M
#  250 to  500 devices   768M
#  500 to 1000 devices  1024M
# 1000 to 2000 devices  2048M
#
innodb_buffer_pool_size = {{percentScale .RAMCommitment 0.8}}

# TODO: Log file size should be 25% of of buffer pool size, but this cannot be
# easily adjusted after image creation time.
innodb_log_file_size = 200M
innodb_additional_mem_pool_size = 32M
innodb_log_buffer_size = 8M
innodb_flush_method = O_DIRECT
innodb_flush_log_at_trx_commit = 2

# In previous releases of MySQL, this was recommended to be set to 2 times the
# number of CPUs, however the default and recommended option in 5.5 is to not
# set a bound on the thread pool size.
innodb_thread_concurrency = 0

# Setting this setting to 0 is recommended in virtualized environments. If
# not running virtualized, a higher value can result in improved database
# performance; the default value 6 is used if this setting is commented out.
innodb_spin_wait_delay = 0

# In large installs, there were a significant number of mutex waits on the 
# adaptive hash index, and this needed to be disabled.
innodb_adaptive_hash_index = OFF

# Use the Barracuda file format which enables support for dynamic and 
# compressed row formats.
innodb_file_format = Barracuda

# Enable the thread pool - recommended on 5.5.16 and later.
thread_pool_size = 32

# Disable the query cache - it provides negligible performance improvements
# and leads to significant thread contention under load.
query_cache_size = 0
query_cache_type = OFF

max_allowed_packet = 64M
wait_timeout = 7200

# Enable dedicated purge thread. (default is 0)
innodb_purge_threads = 1

# Introduce operation lag to allow purge operations. (default is 0)
innodb_max_purge_lag = 0

# Set buffer pool instances (cpu core count for physical machines, subtract one for VMs)
# TODO: instances should be at least 1GB, so this should be scaled to buffer_pool_size as well
innodb_buffer_pool_instances = {{.CPUCommitment}}

# Increase number of connections + open file handles
max_connections = 500

[mysql]
max_allowed_packet = 64M

[mysqldump]
max_allowed_packet = 64M
