{
    "Actions": {
        "debug": "su - zenoss -c '/opt/zenoss/bin/zencapacity debug'",
        "stats": "su - zenoss -c '/opt/zenoss/bin/zencapacity stats'"
    },
    "CPUCommitment": 1,
    "ChangeOptions": [
        "restartAllOnInstanceChanged"
    ],
    "Command": "su - zenoss -c \"/opt/zenoss/bin/zencapacity run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID \"",
    "ConfigFiles": {
        "/opt/zenoss/etc/global.conf": {
            "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
            "Filename": "/opt/zenoss/etc/global.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "660"
        },
        "/opt/zenoss/etc/zencapacity.conf": {
            "Filename": "/opt/zenoss/etc/zencapacity.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "0664"
        }
    },
    "Description": "Aggregates, projects, and indexes capacity data.",
    "Endpoints": [
        {
            "Application": "controlplane_consumer",
            "Name": "controlplane_consumer",
            "PortNumber": 8444,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "memcached",
            "Name": "memcached",
            "PortNumber": 11211,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "opentsdb-reader",
            "Name": "opentsdb-reader",
            "PortNumber": 4242,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "rabbitmq.*",
            "Name": "rabbitmq",
            "Purpose": "import"
        },
        {
            "Application": "redis",
            "Name": "redis",
            "PortNumber": 6379,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "zep",
            "Name": "zep",
            "PortNumber": 8084,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "zodb_.*",
            "Name": "mariadb",
            "Purpose": "import"
        },
        {
            "Application": "zproxy",
            "Name": "zproxy",
            "PortNumber": 8080,
            "Protocol": "tcp",
            "Purpose": "import"
        }
    ],
    "HealthChecks": {
        "mariadb_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering"
        },
        "memcached_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/memcached_answering"
        },
        "rabbit_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}"
        },
        "running": {
            "Interval": 5.0,
            "Script": "pgrep -fu zenoss zencapacity.py > /dev/null"
        },
        "zep_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/zep_answering"
        }
    },
    "ImageID": "zenoss/zenoss5x",
    "Instances": {
        "min": 1
    },
    "Launch": "auto",
    "LogConfigs": [
        {
            "filters": [
                "pythondaemon"
            ],
            "path": "/opt/zenoss/log/zencapacity.log",
            "type": "zencapacity"
        },
        {
            "filters": [
                "supervisord"
            ],
            "isAudit": true,
            "path": "/opt/zenoss/log/audit.log",
            "type": "zenossaudit"
        }
    ],
    "Name": "Capacity",
    "Prereqs": [
        {
            "Name": "MariaDB connectivity",
            "Script": "export TERM=xterm; mysql --host=127.0.0.1 --port=3306 -c ';' 2>&1 | grep denied"
        }
    ],
    "RAMCommitment": "8G",
    "Services": [],
    "Tags": [
        "daemon",
        "ZenPacks.zenoss.Capacity"
    ],
    "Volumes": [
        {
            "ContainerPath": "/var/zenoss",
            "Owner": "zenoss:zenoss",
            "Permission": "0775",
            "ResourcePath": "var-zenpacks"
        }
    ]
}