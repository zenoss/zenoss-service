{
    "CPUCommitment": 1,
    "Command": "su - zenoss -c \"CONFIG_FILE=${ZENHOME:-/opt/zenoss}/etc/zendebug.conf /opt/zenoss/bin/runzope\" ",
    "Commands": {
        "apply-custom-patches": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun patch.sh applyPatches",
            "CommitOnSuccess": true,
            "Description": "Apply custom patches to the service using an installed Quilt"
        },
        "help": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun help.sh",
            "CommitOnSuccess": false,
            "Description": "Display this help message"
        },
        "install-percona": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun percona.sh install",
            "CommitOnSuccess": true,
            "Description": "Install Percona tools"
        },
        "install-quilt": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun quilt.sh install",
            "CommitOnSuccess": false,
            "Description": "Install patching tool Quilt"
        },
        "reportmail": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun reportmail.sh",
            "CommitOnSuccess": false,
            "Description": "Generate and email a report"
        },
        "upgrade": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun upgrade.sh doUpgrade",
            "CommitOnSuccess": true,
            "Description": "Upgrade a Zenoss installation"
        },
        "zendmd": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zendmd",
            "CommitOnSuccess": false,
            "Description": "Start an interactive zendmd session"
        },
        "zenmib": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenmib.sh",
            "CommitOnSuccess": true,
            "Description": "Load, convert, and import MIB files into the Zenoss DMD"
        },
        "zenossdbpack": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenossdbpack",
            "CommitOnSuccess": false,
            "Description": "Run ZODB storage packing tool"
        },
        "zenpack": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenpack.sh --service-id={{.ID}}",
            "CommitOnSuccess": false,
            "Description": "Check information on available Zenpacks"
        },
        "zenpack-manager": {
            "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenpack-manager.sh --service-id={{.ID}}",
            "CommitOnSuccess": true,
            "Description": "Install, create, link, or destroy Zenpacks"
        }
    },
    "ConfigFiles": {
        "/opt/zenoss/etc/global.conf": {
            "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
            "Filename": "/opt/zenoss/etc/global.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "660"
        },
        "/opt/zenoss/etc/zendebug.conf": {
            "Filename": "/opt/zenoss/etc/zendebug.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "660"
        },
        "/opt/zenoss/etc/zodb_db_main.conf": {
            "FileName": "/opt/zenoss/etc/zodb_db_main.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "0664"
        },
        "/opt/zenoss/etc/zodb_db_session.conf": {
            "FileName": "/opt/zenoss/etc/zodb_db_session.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "0664"
        }
    },
    "Description": "Zope debug server",
    "Endpoints": [
        {
            "Application": "localhost_zenhubPB",
            "Name": "zenhub",
            "PortNumber": 8789,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "zodb_.*",
            "Name": "mariadb",
            "Purpose": "import"
        },
        {
            "Application": "memcached",
            "Name": "memcached",
            "PortNumber": 11211,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "memcached-session",
            "Name": "memcached-session",
            "PortNumber": 11212,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "redis",
            "Name": "redis",
            "PortNumber": 6379,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "rabbitmq.*",
            "Name": "rabbitmq",
            "Purpose": "import"
        },
        {
            "Application": "zproxy",
            "Name": "zproxy",
            "PortNumber": 8080,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "zep",
            "Name": "zep",
            "PortNumber": 8084,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "dynamicserver",
            "Name": "dynamicserver",
            "PortNumber": 8700,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Application": "zendebug",
            "Name": "zendebug",
            "PortNumber": 9310,
            "Protocol": "tcp",
            "Purpose": "export"
        },
        {
            "Application": "controlplane_consumer",
            "Name": "controlplane_consumer",
            "PortNumber": 8444,
            "Protocol": "tcp",
            "Purpose": "import"
        }
    ],
    "HealthChecks": {
        "answering": {
            "Interval": 15.0,
            "Script": "curl -A 'zendebug answering healthcheck' --retry 3 --max-time 2 -s http://localhost:9310/zport/ruok | grep -q imok"
        },
        "mariadb_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering"
        },
        "memcached_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/memcached_answering"
        },
        "memcached_session_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/memcached_session_answering"
        },
        "rabbit_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}"
        },
        "redis_answering": {
            "Interval": 5.0,
            "Script": "/opt/zenoss/bin/healthchecks/redis_answering"
        },
        "running": {
            "Interval": 5.0,
            "Script": "pgrep -fu zenoss runzope >/dev/null"
        },
        "solr_answering": {
            "Interval": 10.0,
            "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'"
        },
        "zep_answering": {
            "Interval": 10.0,
            "Script": "/opt/zenoss/bin/healthchecks/zep_answering"
        }
    },
    "ImageID": "zenoss/zenoss5x",
    "Instances": {
        "default": 1,
        "max": 1,
        "min": 1
    },
    "Launch": "manual",
    "LogConfigs": [
        {
            "filters": [
                "zope",
                "pythondaemon"
            ],
            "path": "/opt/zenoss/log/event-zendebug.log",
            "type": "zope_eventlog"
        },
        {
            "filters": [
                "z2_access_logs"
            ],
            "path": "/opt/zenoss/log/Z2-zendebug.log",
            "type": "zope_access_logs"
        },
        {
            "filters": [
                "supervisord"
            ],
            "isAudit": true,
            "path": "/opt/zenoss/log/audit.log",
            "type": "zenossaudit"
        }
    ],
    "Name": "zendebug",
    "Prereqs": [
        {
            "Name": "MariaDB connectivity",
            "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
        }
    ],
    "RAMCommitment": "1G",
    "Services": [],
    "StartLevel": 0,
    "Tags": [
        "daemon"
    ],
    "Volumes": [
        {
            "#####": "drwxr-xr-x 2 zenoss zenoss 4096 Feb  6 19:11 /opt/zenoss/.pc",
            "ContainerPath": "/opt/zenoss/.pc",
            "Owner": "zenoss:zenoss",
            "Permission": "0755",
            "ResourcePath": "zenoss-custom-patches-pc"
        },
        {
            "#####": "drwxr-xr-x 2 zenoss zenoss 4096 Feb  6 19:11 /opt/zenoss/patches",
            "ContainerPath": "/opt/zenoss/patches",
            "Owner": "zenoss:zenoss",
            "Permission": "0755",
            "ResourcePath": "zenoss-custom-patches"
        },
        {
            "#####": "drwxr-xr-x 2 zenoss zenoss 4096 Feb  6 19:11 /opt/zenoss/log/jobs",
            "ContainerPath": "/opt/zenoss/log/jobs",
            "Owner": "zenoss:zenoss",
            "Permission": "0755",
            "ResourcePath": "zenjobs"
        },
        {
            "#####": "drwxrwxr-x 3 zenoss zenoss 4096 Jul 18 11:20 /opt/zenoss/var/ext",
            "ContainerPath": "/opt/zenoss/var/ext",
            "Owner": "zenoss:zenoss",
            "Permission": "0775",
            "ResourcePath": "zenoss-var-ext"
        },
        {
            "#####": "drwxrwxr-x 4 zenoss zenoss 4096 Jul 18 11:20 /opt/zenoss/export",
            "ContainerPath": "/opt/zenoss/export",
            "Owner": "zenoss:zenoss",
            "Permission": "0775",
            "ResourcePath": "zenoss-export"
        },
        {
            "ContainerPath": "/opt/zenoss/.ZenPacks",
            "Owner": "zenoss:zenoss",
            "Permission": "0775",
            "ResourcePath": "zenpack-backup"
        },
        {
            "ContainerPath": "/home/zenoss/.ssh",
            "Owner": "zenoss:zenoss",
            "Permission": "0755",
            "ResourcePath": ".ssh",
            "Type": ""
        },
        {
            "ContainerPath": "/var/zenoss",
            "Owner": "zenoss:zenoss",
            "Permission": "0775",
            "ResourcePath": "var-zenpacks"
        }
    ]
}
