authEnabled: true

logging:
    level: INFO

http:
  port: 8443
  adminPort: 58443
  connectorType: nonblocking
  ssl:
      keyStore: etc/metric-consumer-app/cert/ssl.pfx
      keyStorePassword: zapp_pass
      keyStoreType:     pkcs12
  requestLog:
    console:
      enabled: false

webSocketConfiguration:
    maxTextMessageSize: 10485760

metricService:
    jobSize: 1000
    highCollisionMark: 2000000
    lowCollisionMark: 1000000
    perClientMaxBacklogSize: -1
    perClientMaxPercentOfFairBacklogSize: 100
    maxClientWaitTime: 60000
    minTimeBetweenBroadcast: 100
    minTimeBetweenNotification: 100
    tsdbWriterThreads: 1
    maxIdleTime: 10000
    maxConnectionBackOff: 5000
    minConnectionBackOff: 100
    openTsdbClientPool:
      maxKeepAliveTime: 300000
      minTestTime:       60000
      clientBufferSize:  65536
      clients:
        - {host: localhost, port: 4242}

      clientFactory:
        keepAlive:          true
        connectTimeout:     1000
        soTimeout:          1000

managedReporter:
    metricReporters:
      - {posterType: http, username: "$env[CONTROLPLANE_CONSUMER_USERNAME]", password: "$env[CONTROLPLANE_CONSUMER_PASSWORD]", urlEnvironment: "CONTROLPLANE_CONSUMER_URL"}
      - {posterType: bean, beanName: metric-service-poster}

zenossCredentials:
    username: "{{(getContext . "global.conf.zauth-username")}}"
    password: "{{(getContext . "global.conf.zauth-password")}}"
